#include <WiFi.h>
#include <ESP32Servo.h>  // Library servo untuk ESP32
#include <WebServer.h>   // Library WebServer untuk ESP32

// Pin definisi untuk sensor ultrasonik dan servo
const int trigPin = 5;
const int echoPin = 18;
const int servoPin = 19;
const int detectionDistance = 20; // Jarak deteksi dalam cm

// Inisialisasi servo dan WiFi
Servo servoMotor;
const char* ssid = "Nama_WiFi_Anda";
const char* password = "Password_WiFi_Anda";

// Inisialisasi web server pada port 80
WebServer server(80);

// Fungsi untuk mengukur jarak dari sensor ultrasonik
long readUltrasonicDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  long distance = (duration * 0.034) / 2;
  return distance;
}

// Fungsi untuk menangani permintaan jarak dari sensor
void handleDistance() {
  long distance = readUltrasonicDistance();
  String response = String(distance);
  server.send(200, "text/plain", response);
}

// Fungsi untuk menangani halaman utama
void handleRoot() {
  String html = "<html><head><title>Monitoring Tempat Sampah</title></head><body>";
  html += "<h1>Monitoring Tempat Sampah Otomatis</h1>";
  html += "<p><strong>Jarak ke objek: </strong><span id='distance'>Mengukur...</span> cm</p>";
  html += "<script>setInterval(function() {fetch('/distance').then(response => response.text()).then(data => {document.getElementById('distance').innerHTML = data;});}, 1000);</script>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void setup() {
  // Inisialisasi pin ultrasonik dan servo
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  servoMotor.attach(servoPin);
  servoMotor.write(0);  // Posisi tutup sampah tertutup

  // Inisialisasi komunikasi serial
  Serial.begin(115200);

  // Inisialisasi WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Menghubungkan ke WiFi...");
  }
  Serial.println("Terhubung ke WiFi");

  // Tentukan rute untuk halaman utama dan API jarak
  server.on("/", handleRoot);
  server.on("/distance", handleDistance);

  // Memulai web server
  server.begin();
}

void loop() {
  // Jalankan web server
  server.handleClient();

  // Logika buka/tutup tempat sampah
  long distance = readUltrasonicDistance();
  if (distance <= detectionDistance && distance > 0) {
    Serial.println("Objek terdeteksi, membuka tutup...");
    servoMotor.write(90);  // Buka tutup sampah (90 derajat)
    delay(3000);           // Tunggu 3 detik sebelum menutup kembali
    servoMotor.write(0);   // Tutup tutup sampah (0 derajat)
    delay(1000);           // Tunggu 1 detik sebelum pengecekan berikutnya
  }
}
